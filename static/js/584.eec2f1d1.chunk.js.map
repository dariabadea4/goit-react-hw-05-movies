{"version":3,"file":"static/js/584.eec2f1d1.chunk.js","mappings":"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","sources":["components/List/List.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst List = ({ data, ItemComponent, className }) => {\n  return (\n    <ul className={className}>\n      {data.map(element => (\n        <ItemComponent key={element.id} element={element} />\n      ))}\n    </ul>\n  );\n};\nexport default List;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 200px;\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  height: 300px;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 15px;\n`;\nexport const Title = styled.p`\n  width: 200px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 10px;\n`;\n\nexport const VoteAverage = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport moviePoster from '../../images/photoshop-film-strip.jpg';\nimport { Item, Title, Poster, VoteAverage } from './MovieItem.styled';\nimport { BsFillStarFill } from 'react-icons/bs';\n\nconst MoviesItem = ({ element }) => {\n  const location = useLocation();\n  const src = element.poster_path\n    ? `https://image.tmdb.org/t/p/w342${element.poster_path}`\n    : moviePoster;\n\n  return (\n    <Item>\n      <Link to={`/movies/${element.id}`} state={{ from: location }}>\n        <Poster src={src} alt={`Poster for ${element.title}`} />\n        <Title>{element.title}</Title>\n\n        <VoteAverage>\n          <BsFillStarFill />\n          <p>{element.vote_average.toFixed(1)}</p>\n        </VoteAverage>\n      </Link>\n    </Item>\n  );\n};\n\nexport default MoviesItem;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  display: inline-block;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #6d90a8;\n  /* opacity: 0.6; */\n  /* transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1); */\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: #d4e0e9;\n  }\n`;\n\nexport const BtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, Button, BtnLabel } from './Searchbar.styled';\nimport { BsSearch } from 'react-icons/bs';\nconst Searchbar = ({ onSetSearch }) => {\n  const [searchParams] = useSearchParams();\n  const searchMovie = searchParams.get('query');\n  const [search, setSearch] = useState(null);\n\n  useEffect(() => {\n    setSearch(searchMovie);\n  }, [searchMovie]);\n\n  const handleSearchChange = e => {\n    const queryValue = e.currentTarget.value;\n    queryValue !== '' ? setSearch(queryValue) : setSearch(null);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.movie.value.toLowerCase();\n    if (query.trim() === '') {\n      return alert('Please enter a search query');\n    }\n    if (search) onSetSearch({ query: search });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        name=\"movie\"\n        type=\"text\"\n        value={search ? search : ''}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleSearchChange}\n      />\n      <Button>\n        <BsSearch />\n        <BtnLabel>Search</BtnLabel>\n      </Button>\n    </Form>\n  );\n};\n\nexport default Searchbar;","import MoviesItem from 'components/MovieItem';\nimport List from 'components/List';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'services/api';\nimport Searchbar from '../components/Searchbar';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      if (error) {\n        setError(false);\n      }\n      setLoading(true);\n      const fetchSearchMovies = async () => {\n        try {\n          const searchMovies = await fetchSearch(query);\n          if (searchMovies.length === 0) {\n            throw new Error(\n              `There are no movies for the request of '${query}'`\n            );\n          } else {\n            setMovies(searchMovies);\n          }\n        } catch (error) {\n          setError(error.message);\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchSearchMovies();\n    } else {\n      setMovies([]);\n    }\n  }, [error, query]);\n\n  return (\n    <>\n      <Searchbar onSetSearch={setSearchParams} />\n      {loading ? (\n        <p>loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        <List\n          data={movies}\n          ItemComponent={MoviesItem}\n          className={'movie-list'}\n        />\n      )}\n    </>\n  );\n};\nexport default MoviesPage;","const controller = new AbortController();\nconst signal = controller.signal;\n\nconst API_THEMOVIEDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=d3d5044f23d7b8347f525b76e517e169';\n\nexport const fetchTrendingMovies = async () => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/trending/movie/day?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchSearch = async search => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/search/movie?query=${search}&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchDetailsMovie = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res);\n};\n\nexport const fetchCast = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/credits?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.cast);\n};\n\nexport const fetchReviews = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/reviews?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};"],"names":["_ref","data","ItemComponent","className","_jsx","children","map","element","id","Item","styled","_templateObject","_taggedTemplateLiteral","Poster","_templateObject2","Title","_templateObject3","VoteAverage","_templateObject4","location","useLocation","src","poster_path","concat","moviePoster","_jsxs","Link","to","state","from","alt","title","BsFillStarFill","vote_average","toFixed","Form","Input","Button","BtnLabel","onSetSearch","_useSearchParams","useSearchParams","searchMovie","_slicedToArray","get","_useState","useState","_useState2","search","setSearch","useEffect","onSubmit","e","preventDefault","currentTarget","elements","movie","value","toLowerCase","trim","alert","query","name","type","autoComplete","autoFocus","placeholder","onChange","queryValue","BsSearch","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","_useSearchParams2","searchParams","setSearchParams","fetchSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","searchMovies","_context","prev","next","fetchSearch","sent","length","Error","t0","message","console","log","finish","stop","apply","arguments","_Fragment","Searchbar","List","MoviesItem","signal","AbortController","API_THEMOVIEDB_BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","res","json","results","abrupt","_ref2","_callee2","_context2","_x","fetchDetailsMovie","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}