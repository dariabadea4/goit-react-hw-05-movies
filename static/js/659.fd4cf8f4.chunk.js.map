{"version":3,"file":"static/js/659.fd4cf8f4.chunk.js","mappings":"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","sources":["components/List/List.jsx","components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","pages/CastPage.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\n\nconst List = ({ data, ItemComponent, className }) => {\n  return (\n    <ul className={className}>\n      {data.map(element => (\n        <ItemComponent key={element.id} element={element} />\n      ))}\n    </ul>\n  );\n};\nexport default List;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 100px;\n  overflow: hidden;\n`;\n\nexport const Profile = styled.img`\n  height: 150px;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 15px;\n`;\nexport const Actor = styled.h3`\n  font-size: 12px;\n  margin-bottom: 10px;\n`;\nexport const Character = styled.p`\n  font-size: 10px;\n  color: #202328;\n`;","import moviePoster from '../../images/profile.png';\nimport { Item, Profile, Actor, Character } from './CastItem.styled';\nconst CastItem = ({ element }) => {\n  const src = element.profile_path\n    ? `https://image.tmdb.org/t/p/w45${element.profile_path}`\n    : moviePoster;\n  return (\n    <Item>\n      <Profile src={src} alt={`profile for ${element.name}`} />\n      <Actor>{element.name}</Actor>\n      {element.character && (\n        <Character>\n          character:<b> {element.character}</b>\n        </Character>\n      )}\n    </Item>\n  );\n};\nexport default CastItem;","import CastItem from 'components/CastItem';\nimport List from 'components/List';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (error) {\n      setError(false);\n    }\n    setLoading(true);\n    const fetchSendCast = async () => {\n      try {\n        const sendCast = await fetchCast(movieId);\n        if (sendCast) {\n          setCast(sendCast);\n          console.log('cast', sendCast);\n        }\n        if (sendCast.success === false) {\n          throw new Error(`The resource you requested could not be found.`);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSendCast();\n  }, [error, movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        <List data={cast} ItemComponent={CastItem} className={'cast-list'} />\n      )}\n    </>\n  );\n};\nexport default CastPage;","const controller = new AbortController();\nconst signal = controller.signal;\n\nconst API_THEMOVIEDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=ed0ba232a842a0e088d60151bc7fdce4';\n\nexport const fetchTrendingMovies = async () => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/trending/movie/day?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchSearch = async search => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/search/movie?query=${search}&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchDetailsMovie = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res);\n};\n\nexport const fetchCast = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/credits?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.cast);\n};\n\nexport const fetchReviews = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/reviews?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };"],"names":["_ref","data","ItemComponent","className","_jsx","children","map","element","id","Item","styled","_templateObject","_taggedTemplateLiteral","Profile","_templateObject2","Actor","_templateObject3","Character","_templateObject4","src","profile_path","concat","_jsxs","alt","name","character","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","movieId","useParams","useEffect","fetchSendCast","_asyncToGenerator","_regeneratorRuntime","_callee","sendCast","_context","prev","next","fetchCast","sent","console","log","success","Error","t0","message","finish","stop","apply","arguments","_Fragment","List","CastItem","signal","AbortController","API_THEMOVIEDB_BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","res","json","results","abrupt","fetchSearch","_ref2","_callee2","search","_context2","_x","fetchDetailsMovie","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","this","_next","_throw"],"sourceRoot":""}